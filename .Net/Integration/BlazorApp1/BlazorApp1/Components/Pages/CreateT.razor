@page "/CreateTest"
@using BlazorApp1.Data;
@using BlazorApp1.Models;
@using Microsoft.EntityFrameworkCore;
<h3>CreateT</h3>
@using (var db = new HrContext())
{
    ModelCT modelCT = new ModelCT();
<EditForm Model="modelCT" OnSubmit="@FormSubmitted" FormName="form-1">
    <table>
        <tr>
            <td>
                <p>ID</p>
                <InputText @bind-Value="modelCT.Id"></InputText>
            </td>
        </tr>
        <tr>
            <td>
                <p>First Name</p>
                <InputText @bind-Value="modelCT.FirstName"></InputText>
            </td>
        </tr>
        <tr>
            <td>
                <p>Mid Name</p>
                <InputText @bind-Value="modelCT.MidName"></InputText>
            </td>
        </tr>
        <tr>
            <td>
                <p>Last Name</p>
                <InputText @bind-Value="modelCT.LastName"></InputText>
            </td>
        </tr>
        <tr>
            <td>Id Payrate</td>
            <td>
                <InputSelect class="form-select" @bind-Value="@modelCT.IdPayrate">

                    @foreach (var tmp in payRates)
                    {
                        <option value="@tmp.IdPayRates">@tmp.PayRateName</option>
                    }
                </InputSelect>
            </td>
        </tr>
            <tr>
                <td>
                    <a href="/"> <button class="btn btn-danger">Exit</button></a>
                </td>
                <td>
                    <button class="btn btn-primary" type="submit">Submit</button>
                </td>
            </tr>
    </table>
</EditForm>
}
@code {
    [SupplyParameterFromForm]
    ModelCT modelCT { get; set; }
    @inject HrContext hrcontext;

    @inject MydbContext dbcontext;

    @inject NavigationManager navigationManager;

    List<BenefitPlan> benefitPlans = new List<BenefitPlan>();
    List<PayRate> payRates = new List<PayRate>();
    List<Employee> employees = new List<Employee>();
    protected override async Task OnInitializedAsync()
    {
        payRates = await dbcontext.PayRates.ToListAsync();
        benefitPlans = await hrcontext.BenefitPlans.ToListAsync();
        employees = await dbcontext.Employees.ToListAsync();
    }
    void FormSubmitted()
    {

        List<Personal> personals = new List<Personal>();
        List<Employment> employments = new List<Employment>();
        int employeeId = employees.Count();
        Employee newEmployee = new Employee(employeeId + 1, Convert.ToUInt16(employeeId), modelCT.LastName + " ", modelCT.MidName + " " + modelCT.FirstName, Convert.ToDecimal(222), payRates[modelCT.IdPayrate].PayRateName, modelCT.IdPayrate, 1, 1, 1);
        dbcontext.Add(newEmployee);
        dbcontext.SaveChanges();
    }

}
